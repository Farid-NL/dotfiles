#|----------------------------------
#| zsh4humans settings
#|----------------------------------

# Periodic auto-update on Zsh startup: 'ask' or 'no'.
# You can manually run `z4h update` to update everything.
zstyle ':z4h:' auto-update      'no'
# Ask whether to auto-update this often; has no effect if auto-update is 'no'.
zstyle ':z4h:' auto-update-days '28'

# Keyboard type: 'mac' or 'pc'.
zstyle ':z4h:bindkey' keyboard  'pc'

# Automaticaly wrap TTY with a transparent tmux ('integrated'), or start a
# full-fledged tmux ('system'), or disable features that require tmux ('no').
zstyle ':z4h:' start-tmux       'no'

# Move prompt to the bottom when zsh starts up so that it's always in the same
# position. Has no effect if start-tmux is 'no' or your're not ina tmux session.
zstyle ':z4h:' prompt-at-bottom 'yes'

# Mark up shell's output with semantic information.
zstyle ':z4h:' term-shell-integration 'yes'

# Right-arrow key accepts one character ('partial-accept') from
# command autosuggestions or the whole thing ('accept')?
zstyle ':z4h:autosuggestions' forward-char 'partial-accept'

# Recursively traverse directories when TAB-completing files.
zstyle ':z4h:fzf-complete' recurse-dirs 'yes'
zstyle ':z4h:fzf-complete' fzf-bindings tab:repeat

# Enable direnv to automatically source .envrc files.
zstyle ':z4h:direnv'         enable 'no'
# Show "loading" and "unloading" notifications from direnv.
zstyle ':z4h:direnv:success' notify 'yes'

# Enable ('yes') or disable ('no') automatic teleportation of z4h over
# SSH when connecting to these hosts.
zstyle ':z4h:ssh:example-hostname1'   enable 'yes'
zstyle ':z4h:ssh:*.example-hostname2' enable 'no'
# The default value if none of the overrides above match the hostname.
zstyle ':z4h:ssh:*'                   enable 'no'

# Send these files over to the remote host when connecting over SSH to the
# enabled hosts.
zstyle ':z4h:ssh:*' send-extra-files '~/.nanorc' '~/.env.zsh'

#|---------------------------------
#| Clone repositories from GitHub
#|---------------------------------
#z4h install Farid-NL/zsh-nvm || return

#|-------------------------------------------------------
#| Install or update core components and initialize Zsh
#|-------------------------------------------------------
#| After this point console I/O is unavailable until Zsh is fully
#| initialized. Everything that requires user interaction or can perform
#| network I/O must be done above. Everything else is best done below.

z4h init || return

#|------------------------
#| Environment variables
#|------------------------

export EDITOR=nvim # nvim if installed
export VISUAL=nvim # nvim if installed

export GPG_TTY=$TTY

# -i | ignore case in searches that lack uppercase
# -R | display control chars; keep track of screen effects
# -F | exit if entire file fits on first screen
# -M | prompt very verbosely
# -x | set tab stops
export LESS='-iRFMx4'
export FZF_DEFAULT_OPTS='--color=fg:#f8f8f2,bg:#282a36,hl:#bd93f9
  --color=fg+:#f8f8f2,bg+:#44475a,hl+:#bd93f9
  --color=info:#ffb86c,prompt:#50fa7b,pointer:#ff79c6
  --color=marker:#ff79c6,spinner:#ffb86c,header:#6272a4'

export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_STATE_HOME="$HOME/.local/state"

export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/.npmrc"
export ANSIBLE_HOME="$XDG_DATA_HOME/ansible"
export DOCKER_CONFIG="$XDG_CONFIG_HOME/docker"

#|-----------
#| Software
#|-----------

#|-- fzf --
#| Installation:
#|   ❯ git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
#|   ❯ sudo mv ~/.fzf /opt/fzf
#|   ❯ /opt/fzf/install --bin
path=(/opt/fzf/bin $path)
eval "$(fzf --zsh)"

#|-- Zoxide --
eval "$(zoxide init --cmd cd zsh)"

#|-- Navi --
#| Installation:
#|   ❯ BIN_DIR="$HOME/.local/bin"
#|   ❯ bash <(curl -sL https://raw.githubusercontent.com/denisidoro/navi/master/scripts/install)
eval "$(navi widget zsh)"

#|-- rbenv --
#| Installation:
#|   ❯ git clone https://github.com/rbenv/rbenv.git ~/.rbenv
#|   ❯ git clone https://github.com/rbenv/ruby-build.git "$(rbenv root)"/plugins/ruby-build
#|   ❯ sudo apt install libz-dev libffi-dev libssl-dev libcurl4-openssl-dev libyaml-dev
eval "$(~/.rbenv/bin/rbenv init - zsh)"

#|-- Conda --
#| Installation:
#|   ❯ wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /tmp/miniconda.sh
#|   ❯ /tmp/miniconda.sh -b -u -p "$CONDA_DIR"
export CONDA_DIR="$HOME/.miniconda"

#|-- sdkman --
#| Installation:
#|   ❯ curl -s "https://get.sdkman.io?rcupdate=false" | bash
export SDKMAN_DIR="$HOME/.sdkman"

#|-- Volta --
#| Installation:
#|   ❯ curl -s "https://get.volta.sh" | bash -s -- --skip-setup
export VOLTA_HOME="$HOME/.volta"
path=($VOLTA_HOME/bin $path)

#|--------------
#| Extend PATH
#|--------------

path=(~/.local/bin $path)
fpath=(~/.config/zsh/completion $fpath)

#|------------------------------
#| Source files & load plugins
#|------------------------------

z4h source ~/.config/zsh/functions.zsh
z4h source ~/.config/zsh/lazy-loadings.zsh # sdkman, miniconda
#z4h source Farid-NL/zsh-nvm/zsh-nvm.plugin.zsh
#z4h load   ohmyzsh/ohmyzsh/plugins/emoji-clock

#|----------------------
#| Define key bindings
#|----------------------

z4h bindkey z4h-backward-kill-word  Ctrl+Backspace     Ctrl+H
z4h bindkey z4h-backward-kill-zword Ctrl+Alt+Backspace

z4h bindkey undo Ctrl+/ Shift+Tab  # undo the last command line change
z4h bindkey redo Alt+/             # redo the last undone command line change

z4h bindkey z4h-cd-back    Alt+Left   # cd into the previous directory
z4h bindkey z4h-cd-forward Alt+Right  # cd into the next directory
z4h bindkey z4h-cd-up      Alt+Up     # cd into the parent directory
z4h bindkey z4h-cd-down    Alt+Down   # cd into a child directory

#|---------------------
#| Autoload functions
#|---------------------

#autoload -Uz zmv

#|-----------------------------------
#| Define functions and completions
#|-----------------------------------

#function md() { [[ $# == 1 ]] && mkdir -p -- "$1" && cd -- "$1" }
#compdef _directories md

#|---------------------------
#| Define named directories
#|---------------------------
#| https://www.arp242.net/zshrc.html#directory-shortcuts

# ~w <=> Windows home directory on WSL.
#[[ -z $z4h_win_home ]] || hash -d w=$z4h_win_home

#|---------------------
#| Aliases
#|---------------------

alias dss="export DELTA_FEATURES='+side-by-side'"
alias dn='unset DELTA_FEATURES'
alias bwu='export BW_SESSION=$(bw unlock --raw)'
alias ls='eza --group-directories-first --color=auto --icons=auto'

# Add flags to existing aliases.
#alias ls="${aliases[ls]:-ls} --group-directories-first -v"
alias rm="${aliases[rm]:-rm} -I"

#|-----------------------------------
#| Set shell options
#|-----------------------------------
#| http://zsh.sourceforge.net/Doc/Release/Options.html

setopt glob_dots     # no special treatment for file names with a leading dot
#setopt no_auto_menu  # require an extra TAB press to open the completion menu
setopt auto_menu     # just one TAB press to open the completion menu

# Tmux on startup
# if command -v tmux &> /dev/null && [ -n "$PS1" ] && [[ ! "$TERM" =~ screen ]] && [[ ! "$TERM" =~ tmux ]] && [ -z "$TMUX" ]; then
#   exec tmux new-session -A -s main
# fi
